iterm_helpers="${HOME}/.iterm2_shell_integration.zsh"
[[ -r $iterm_helpers ]] && source "$iterm_helpers"

autoload -U up-line-or-beginning-search
autoload -U down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search

bindkey '^[[A' up-line-or-beginning-search
bindkey '^[[B' down-line-or-beginning-search
bindkey '^q' push-line-or-edit

SAVEHIST=9999
HISTFILE=~/.zsh_history
setopt AUTO_CD
setopt EXTENDED_GLOB
setopt HIST_EXPIRE_DUPS_FIRST
setopt HIST_FIND_NO_DUPS
setopt HIST_IGNORE_SPACE
setopt HIST_NO_FUNCTIONS
setopt HIST_SAVE_NO_DUPS
setopt INTERACTIVE_COMMENTS
setopt PUSHD_TO_HOME

# No duplicates!
typeset -U path

# https://docs.brew.sh/Installation
homebrew_paths=(/opt/homebrew /home/linuxbrew/.linuxbrew /usr/local/bin)
for homebrew_path in $homebrew_paths
do
	if [[ -x "$homebrew_path/bin/brew" ]]
	then
		path=("$homebrew_path/bin" "$homebrew_path/sbin" $path)
		break
	fi
done
if command -v brew >/dev/null
then
	homebrew_path=$(brew --prefix)

	# Also load the completion goodies.
	site_functions="$homebrew_path/share/zsh/site-functions"
	if [[ -d $site_functions ]]
	then
		fpath=($site_functions $fpath)
		autoload -U $site_functions/*(:t)
		type _amazon_completions >/dev/null && _amazon_completions
	fi

	# More completions.
	homebrew_complet="$homebrew_path/share/zsh/site-functions"
	if [[ -d $homebrew_complet ]]
	then
		fpath=($fpath /opt/homebrew/share/zsh/site-functions)
	fi
fi

# This has higher priority and is installed by Homebrew, i.e. it needs to come after.
if command -v pyenv >/dev/null
then
	eval "$(pyenv init -)"
	command -v py >/dev/null && export PY_PYTHON=$(pyenv exec python -c "import sys; print('.'.join(map(str, sys.version_info[:2])))")
fi
command -v pyenv-virtualenv-init >/dev/null && eval "$(pyenv virtualenv-init -)"

# These have lower priority and are appended.
appends=(.local .cargo)
for append in $appends
do
	[[ -d "$HOME/$append/bin" ]] && path+="$HOME/$append/bin"
done

# https://github.com/antonmedv/llama
if command -v llama >/dev/null;
then
	function ce {
		builtin cd "$(llama "$@")"
	}
fi

make_aliases() {
	local grep=egrep
	command -v rg >/dev/null && grep='rg --smart-case'
	alias -g NUL="/dev/null"
	alias -g DN=">/dev/null"
	alias -g EN="2>/dev/null"
	alias -g AN="&>/dev/null"
	alias -g G="|$grep"
	alias -g IG="G -i"
	alias -g L="|less"
	alias -g GG="2>&1 |$grep"
	alias -g IGG="2>&1 IG"
	alias -g LL="2>&1 |less"
}
make_aliases

source "$HOME/.zplug.zsh"

autoload -Uz compinit && compinit

export GITHUB_USERNAME=CmdQ
# https://www.chezmoi.io/
# chezmoi init --apply https://github.com/CmdQ/dotfiles.git
command -v chezmoi >/dev/null && eval "$(chezmoi completion zsh)"

mkcd() {
    if (($# != 1)); then
        echo 'Provide name of directory(/chain) as the only argument.'
    else
        mkdir -p "$1" && cd "$1" || echo 'Couldn'\''t create directory.'
    fi
}

export ET_NO_TELEMETRY=set

for f in .zsh_local aliases.sh git.alias amazon.zsh
do
	[[ -r $HOME/$f ]] && source "$HOME/$f"
done
command -v fzf >/dev/null && [[ -r "$HOME/.fzf.zsh" ]] && source "$HOME/.fzf.zsh"

set -o emacs
